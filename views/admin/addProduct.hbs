<!DOCTYPE html>
<html lang="en">
<head>
  <title>Add Products</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap" rel="stylesheet">
  <style media="screen">
    *,
    *:before,
    *:after {
      padding: 0;
      margin: 0;
      box-sizing: border-box;
    }

    body {
      background-color: #080710;
    }

    .background {
      width: 430px;
      height: 520px;
      position: absolute;
      transform: translate(-50%, -50%);
      left: 50%;
      top: 50%;
    }

    .background .shape {
      height: 200px;
      width: 200px;
      position: absolute;
      border-radius: 50%;
    }

    .shape:first-child {
      background: linear-gradient(#1845ad, #23a2f6);
      left: -80px;
      top: -80px;
    }

    .shape:last-child {
      background: linear-gradient(to right, #ff512f, #f09819);
      right: -30px;
      bottom: -80px;
    }

    form {
      height: auto;
      width: 400px;
      background-color: rgba(255, 255, 255, 0.13);
      position: absolute;
      transform: translate(-50%, -50%);
      top: 50%;
      left: 50%;
      border-radius: 10px;
      backdrop-filter: blur(10px);
      border: 2px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 0 40px rgba(8, 7, 16, 0.6);
      padding: 50px 35px;
    }

    form * {
      font-family: 'Poppins', sans-serif;
      color: #ffffff;
      letter-spacing: 0.5px;
      outline: none;
      border: none;
    }

    form h3 {
      font-size: 32px;
      font-weight: 500;
      line-height: 42px;
      text-align: center;
    }

    label {
      display: block;
      margin-top: 30px;
      font-size: 16px;
      font-weight: 500;
    }

    input,
    select {
      display: block;
      height: 30px;
      width: 100%;
      background-color: rgba(255, 255, 255, 0.07);
      border-radius: 3px;
      padding: 0 10px;
      margin-top: 8px;
      font-size: 14px;
      font-weight: 300;
    }

    ::placeholder {
      color: #e5e5e5;
    }

    button {
      margin-top: 50px;
      width: 100%;
      background-color: #ffffff;
      color: #080710;
      padding: 15px 0;
      font-size: 18px;
      font-weight: 600;
      border-radius: 5px;
      cursor: pointer;
    }

    .is-invalid {
      border-color: red;
    }

    .error-message {
      color: red;
      font-size: 12px;
    }
  </style>
</head>

<body>
  <div class="background">
    <div class="shape"></div>
    <div class="shape"></div>
  </div>
  <form id="productForm" action="/admin/addProduct" method="post" enctype="multipart/form-data">
    <h3>Add Products</h3>
    <input type="text" name="pname" placeholder="Product Name" id="pname" onblur="validateProductName()">
    <span id="pnameError" class="error-message"></span>
    
    <input type="file" name="image" id="img">
    <span id="imgError" class="error-message"></span>
    
    <input type="text" name="description" placeholder="Description" id="description">
    <span id="descriptionError" class="error-message"></span>
    
    <input type="number" name="price" placeholder="Price" id="price">
    <span id="priceError" class="error-message"></span>
    
    <input type="number" name="discount" placeholder="Discount" id="discount">
    <span id="discountError" class="error-message"></span>
    
    <input type="number" name="purchase" placeholder="Stock" id="purchase">
    <span id="purchaseError" class="error-message"></span>
    
    <label for="cat">Choose Category</label>
    <select id="cat" name="category">
      <option value="" disabled selected>Choose Category</option>
      {{#each categories}}
      <option value="{{this.cname}}">{{this.cname}}</option>
      {{/each}}
    </select>
    <span id="catError" class="error-message"></span>
    
    {{#if exist}}
    <p style="color: red;">Product Already Exists</p>
    {{/if}}
    
    <button type="submit">Add Products</button>
  </form>

 <script>
  async function validateProductName() {
    const pname = document.getElementById("pname").value;
    const pnameError = document.getElementById("pnameError");
    console.log(pname)
     try {
        const response = await fetch("/admin/ProductExist", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ pname })
        });

        const data = await response.json();

        if (data.exists) {
          pnameError.textContent = "Product name already exists.";
          document.getElementById("pname").classList.add('is-invalid');
        } else {
          pnameError.textContent = "";
          document.getElementById("pname").classList.remove('is-invalid');
        }
      } catch (error) {
        console.error("Error validating product name:", error);
      }

  }

    document.getElementById('productForm').addEventListener('submit', function(event) {
      event.preventDefault();
      var form = event.target;
      var isValid = true;

      // Reset all error messages
      document.querySelectorAll('.error-message').forEach(function(element) {
        element.textContent = '';
      });

      // Reset invalid class
      form.querySelectorAll('.is-invalid').forEach(function(element) {
        element.classList.remove('is-invalid');
      });

      // Validate each input field
      var pname = document.getElementById('pname');
      var img = document.getElementById('img');
      var description = document.getElementById('description');
      var price = document.getElementById('price');
      var discount = document.getElementById('discount');
      var purchase = document.getElementById('purchase');
      var cat = document.getElementById('cat');

      if (!pname.value.trim()) {
        isValid = false;
        pname.classList.add('is-invalid');
        document.getElementById('pnameError').textContent = 'Product Name is required.';
      }

      if (!img.value) {
        isValid = false;
        img.classList.add('is-invalid');
        document.getElementById('imgError').textContent = 'Image is required.';
      }

      if (!description.value.trim()) {
        isValid = false;
        description.classList.add('is-invalid');
        document.getElementById('descriptionError').textContent = 'Description is required.';
      }

      if (!price.value.trim()) {
        isValid = false;
        price.classList.add('is-invalid');
        document.getElementById('priceError').textContent = 'Price is required.';
      }

      if (!discount.value.trim()) {
        isValid = false;
        discount.classList.add('is-invalid');
        document.getElementById('discountError').textContent = 'Discount is required.';
      }

      if (!purchase.value.trim()) {
        isValid = false;
        purchase.classList.add('is-invalid');
        document.getElementById('purchaseError').textContent = 'Stock is required.';
      }

      if (!cat.value.trim()) {
        isValid = false;
        cat.classList.add('is-invalid');
        document.getElementById('catError').textContent = 'Category is required.';
      }

      if (isValid) {
        form.submit();
      } 
      {{!-- else {
        alert('Please fill out all required fields.');
      } --}}
    });
  </script>
</body>
</html>
